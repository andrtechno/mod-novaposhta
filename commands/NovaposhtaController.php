<?php

namespace panix\mod\novaposhta\commands;

use panix\mod\novaposhta\components\Novaposhta;
use panix\mod\novaposhta\models\Cities;
use panix\mod\novaposhta\models\Warehouses;
use Yii;
use panix\engine\console\controllers\ConsoleController;

class NovaposhtaController extends ConsoleController
{
    /**
     * @var Novaposhta
     */
    private $api;

    public function beforeAction($action)
    {
        $this->api = Yii::$app->novaposhta;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionCities()
    {

        $cities = $this->api->getCities();


        if ($cities['success']) {
            $s = [];
            foreach ($cities['data'] as $city) {
                /* $s[] = [
                     $city['Description'],
                     $city['DescriptionRu'],
                     $city['Ref'],
                     $city['Delivery1'],
                     $city['Delivery2'],
                     $city['Delivery3'],
                     $city['Delivery4'],
                     $city['Delivery5'],
                     $city['Delivery6'],
                     $city['Delivery7'],
                     $city['Area'],
                     $city['SettlementType'],
                     $city['IsBranch'],
                     $city['PreventEntryNewStreetsUser'],
                     $city['Conglomerates'],
                     $city['CityID'],
                     $city['SettlementTypeDescription'],
                     $city['SettlementTypeDescriptionRu'],
                     $city['SpecialCashCheck'],
                     $city['Postomat'],
                     $city['AreaDescription'],
                     $city['AreaDescriptionRu'],
                 ];*/

                $responseWarehouses = $this->api->getWarehouses($city['Ref']);
                if ($responseWarehouses['success']) {
                    foreach ($responseWarehouses['data'] as $warehouses) {

                        $dataWarehouse = [
                            'SiteKey' => $warehouses['SiteKey'],
                            'Description' => $warehouses['Description'],
                            'DescriptionRu' => $warehouses['DescriptionRu'],
                            'ShortAddress' => $warehouses['ShortAddress'],
                            'ShortAddressRu' => $warehouses['ShortAddressRu'],
                            'Phone' => $warehouses['Phone'],
                            'TypeOfWarehouse' => $warehouses['TypeOfWarehouse'],
                            'Ref' => $warehouses['Ref'],
                            'Number' => $warehouses['Number'],
                            'CityRef' => $warehouses['CityRef'],
                            'CityDescription' => $warehouses['CityDescription'],
                            'CityDescriptionRu' => $warehouses['CityDescriptionRu'],
                            'SettlementRef' => $warehouses['SettlementRef'],
                            'SettlementDescription' => $warehouses['SettlementDescription'],
                            'SettlementAreaDescription' => $warehouses['SettlementAreaDescription'],
                            'SettlementRegionsDescription' => $warehouses['SettlementRegionsDescription'],
                            'SettlementTypeDescription' => $warehouses['SettlementTypeDescription'],
                            'Longitude' => $warehouses['Longitude'],
                            'Latitude' => $warehouses['Latitude'],
                            'PostFinance' => $warehouses['PostFinance'],
                            'BicycleParking' => $warehouses['BicycleParking'],
                            'PaymentAccess' => $warehouses['PaymentAccess'],
                            'POSTerminal' => $warehouses['POSTerminal'],
                            'InternationalShipping' => $warehouses['InternationalShipping'],
                            'SelfServiceWorkplacesCount' => $warehouses['SelfServiceWorkplacesCount'],
                            'TotalMaxWeightAllowed' => $warehouses['TotalMaxWeightAllowed'],
                            'PlaceMaxWeightAllowed' => $warehouses['PlaceMaxWeightAllowed'],
                            'Reception' => json_encode($warehouses['Reception']),
                            'Delivery' => json_encode($warehouses['Delivery']),
                            'Schedule' => json_encode($warehouses['Schedule']),
                            'DistrictCode' => $warehouses['DistrictCode'],
                            'WarehouseStatus' => $warehouses['WarehouseStatus'],
                            'WarehouseStatusDate' => $warehouses['WarehouseStatusDate'],
                            'CategoryOfWarehouse' => $warehouses['CategoryOfWarehouse'],
                            'Direct' => $warehouses['Direct'],
                        ];
                        Yii::$app->db->createCommand()->insert(Warehouses::tableName(), $dataWarehouse)->execute();
                    }
                }


                $data = [
                    'description' => $city['Description'],
                    'description_ru' => $city['DescriptionRu'],
                    'ref' => $city['Ref'],
                    'delivery1' => $city['Delivery1'],
                    'delivery2' => $city['Delivery2'],
                    'delivery3' => $city['Delivery3'],
                    'delivery4' => $city['Delivery4'],
                    'delivery5' => $city['Delivery5'],
                    'delivery6' => $city['Delivery6'],
                    'delivery7' => $city['Delivery7'],
                    'area' => $city['Area'],
                    'settlementType' => $city['SettlementType'],
                    'isBranch' => $city['IsBranch'],
                    'preventEntryNewStreetsUser' => $city['PreventEntryNewStreetsUser'],
                    'conglomerates' => $city['Conglomerates'],
                    'cityID' => $city['CityID'],
                    'settlementTypeDescription' => $city['SettlementTypeDescription'],
                    'settlementTypeDescriptionRu' => $city['SettlementTypeDescriptionRu'],
                    'specialCashCheck' => $city['SpecialCashCheck'],
                    'postomat' => $city['Postomat'],
                    'areaDescription' => $city['AreaDescription'],
                    'areaDescriptionRu' => $city['AreaDescriptionRu'],
                ];
                Yii::$app->db->createCommand()->insert(Cities::tableName(), $data)->execute();

            }

            /*Yii::$app->db->createCommand()->batchInsert(Cities::tableName(), [
                'description',
                'description_ru',
                'ref',
                'delivery1',
                'delivery2',
                'delivery3',
                'delivery4',
                'delivery5',
                'delivery6',
                'delivery7',
                'area',
                'settlementType',
                'isBranch',
                'preventEntryNewStreetsUser',
                'conglomerates',
                'cityID',
                'settlementTypeDescription',
                'settlementTypeDescriptionRu',
                'specialCashCheck',
                'postomat',
                'areaDescription',
                'areaDescriptionRu'
            ], $s)->execute();*/
        }
    }

    public function actionWarehouses()
    {

        $response = $this->api->getWarehouses();


        if ($response['success']) {
            $s = [];
            foreach ($response['data'] as $data) {
                print_r($data);
                die;
                $s[] = [
                    $city['Description'],
                    $city['DescriptionRu'],
                    $city['Ref'],
                    $city['Delivery1'],
                    $city['Delivery2'],
                    $city['Delivery3'],
                    $city['Delivery4'],
                    $city['Delivery5'],
                    $city['Delivery6'],
                    $city['Delivery7'],
                    $city['Area'],
                    $city['SettlementType'],
                    $city['IsBranch'],
                    $city['PreventEntryNewStreetsUser'],
                    $city['Conglomerates'],
                    $city['CityID'],
                    $city['SettlementTypeDescription'],
                    $city['SettlementTypeDescriptionRu'],
                    $city['SpecialCashCheck'],
                    $city['Postomat'],
                    $city['AreaDescription'],
                    $city['AreaDescriptionRu'],
                ];
            }

            Yii::$app->db->createCommand()->batchInsert(Cities::tableName(), [
                'description',
                'description_ru',
                'ref',
                'delivery1',
                'delivery2',
                'delivery3',
                'delivery4',
                'delivery5',
                'delivery6',
                'delivery7',
                'area',
                'settlementType',
                'isBranch',
                'preventEntryNewStreetsUser',
                'conglomerates',
                'cityID',
                'settlementTypeDescription',
                'settlementTypeDescriptionRu',
                'specialCashCheck',
                'postomat',
                'areaDescription',
                'areaDescriptionRu'
            ], $s)->execute();
        }
    }

}
